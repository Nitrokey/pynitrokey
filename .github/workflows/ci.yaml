name: Continuous integration
on:
  push:
    branches-ignore:
      - "master"
  pull_request:

env:
  FLIT_ROOT_INSTALL: 1

jobs:
  format-code:
    name: Check code format
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install required packages
        run: |
          apt update
          apt install -y gcc libpcsclite-dev make swig git
      - name: Create virtual environment
        run: make init
      - name: Check code format
        run: |
          . venv/bin/activate
          make check-format
  format-import:
    name: Check imports format
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install required packages
        run: |
          apt update
          apt install -y gcc libpcsclite-dev make swig git
      - name: Create virtual environment
        run: make init
      - name: Check code import format
        run: |
          . venv/bin/activate
          make check-import-sorting
  lint-style:
    name: Check code style
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install required packages
        run: |
          apt update
          apt install -y gcc libpcsclite-dev make swig git
      - name: Create virtual environment
        run: make init
      - name: Check code style
        run: |
          . venv/bin/activate
          make check-style
  lint-typing:
    name: Check static typing
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install required packages
        run: |
          apt update
          apt install -y gcc libpcsclite-dev make swig git
      - name: Create virtual environment
        run: make init
      - name: Check code static typing
        run: |
          . venv/bin/activate
          make check-typing
  build-onefile:
    name: Build onefile
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create virtual environment
        run: |
          python -m venv venv
          .\venv\Scripts\Activate.ps1
          .\venv\Scripts\pip install pip
          .\venv\Scripts\pip install flit
          .\venv\Scripts\flit install --symlink
      - name: Create Windows version info file
        run: |
          .\venv\Scripts\Activate.ps1
          create-version-file `
            --outfile .\ci-scripts\windows\pyinstaller\file_version_info.txt `
            --version "$(Get-Content .\pynitrokey\VERSION)" `
            .\ci-scripts\windows\pyinstaller\file_version_info_metadata.yaml
      - name: Build onefile
        run: |
          .\venv\Scripts\Activate.ps1
          pyinstaller ci-scripts/windows/pyinstaller/pynitrokey-onefile.spec
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist\nitropy.exe
